import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
// eslint-disable-next-line no-restricted-imports
// eslint-disable-next-line no-restricted-imports
import { Radio } from 'reakit';
/**
 * WordPress dependencies
 */

import { useInstanceId } from '@wordpress/compose';
/**
 * Internal dependencies
 */

import { contextConnect, useContextSystem } from '../../ui/context';
import { useToggleGroupControlContext } from '../context';
import * as styles from './styles';
import { useCx } from '../../utils/hooks';
const {
  ButtonContentView,
  LabelPlaceholderView,
  LabelView
} = styles;

function ToggleGroupControlOption(props, forwardedRef) {
  var _radioProps$ariaLabe;

  const toggleGroupControlContext = useToggleGroupControlContext();
  const id = useInstanceId(ToggleGroupControlOption, toggleGroupControlContext.baseId || 'toggle-group-control-option');
  const buttonProps = useContextSystem({ ...props,
    id
  }, 'ToggleGroupControlOption');
  const {
    className,
    isBlock = false,
    label,
    value,
    ...radioProps
  } = { ...toggleGroupControlContext,
    ...buttonProps
  };
  const isActive = radioProps.state === value;
  const cx = useCx();
  const labelViewClasses = cx(isBlock && styles.labelBlock);
  const classes = cx(styles.buttonView, className, isActive && styles.buttonActive);
  return createElement(LabelView, {
    className: labelViewClasses,
    "data-active": isActive
  }, createElement(Radio, _extends({}, radioProps, {
    as: "button",
    "aria-label": (_radioProps$ariaLabe = radioProps['aria-label']) !== null && _radioProps$ariaLabe !== void 0 ? _radioProps$ariaLabe : label,
    className: classes,
    "data-value": value,
    ref: forwardedRef,
    value: value
  }), createElement(ButtonContentView, null, label), createElement(LabelPlaceholderView, {
    "aria-hidden": true
  }, label)));
}
/**
 * `ToggleGroupControlOption` is a form component and is meant to be used as a
 * child of `ToggleGroupControl`.
 *
 * @example
 * ```jsx
 * import {
 *   __experimentalToggleGroupControl as ToggleGroupControl,
 *   __experimentalToggleGroupControlOption as ToggleGroupControlOption,
 * } from '@wordpress/components';
 *
 * function Example() {
 *   return (
 *     <ToggleGroupControl label="my label" value="vertical" isBlock>
 *       <ToggleGroupControlOption value="horizontal" label="Horizontal" />
 *       <ToggleGroupControlOption value="vertical" label="Vertical" />
 *     </ToggleGroupControl>
 *   );
 * }
 * ```
 */


const ConnectedToggleGroupControlOption = contextConnect(ToggleGroupControlOption, 'ToggleGroupControlOption');
export default ConnectedToggleGroupControlOption;
//# sourceMappingURL=component.js.map