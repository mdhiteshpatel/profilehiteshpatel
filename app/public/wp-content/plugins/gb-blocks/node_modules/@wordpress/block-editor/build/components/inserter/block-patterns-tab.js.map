{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/block-patterns-tab.js"],"names":["BlockPatternsCategory","rootClientId","onInsert","selectedCategory","onClickCategory","allPatterns","allCategories","onClick","populatedCategories","filter","category","some","pattern","categories","includes","name","sort","currentName","nextName","patternCategory","getPatternIndex","Infinity","find","push","label","length","indexedCategories","map","index","Math","min","cat","undefined","currentCategoryPatterns","orderedPatterns","a","b","currentShownPatterns","BlockPatternsTabs"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { fromPairs } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback, useEffect } from '@wordpress/element';\nimport { _x } from '@wordpress/i18n';\nimport { useAsyncList } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PatternInserterPanel from './pattern-panel';\nimport usePatternsState from './hooks/use-patterns-state';\nimport BlockPatternList from '../block-patterns-list';\n\nfunction BlockPatternsCategory( {\n\trootClientId,\n\tonInsert,\n\tselectedCategory,\n\tonClickCategory,\n} ) {\n\tconst [ allPatterns, allCategories, onClick ] = usePatternsState(\n\t\tonInsert,\n\t\trootClientId\n\t);\n\n\t// Remove any empty categories\n\tconst populatedCategories = useMemo(\n\t\t() =>\n\t\t\tallCategories\n\t\t\t\t.filter( ( category ) =>\n\t\t\t\t\tallPatterns.some( ( pattern ) =>\n\t\t\t\t\t\tpattern.categories?.includes( category.name )\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.sort( ( { name: currentName }, { name: nextName } ) => {\n\t\t\t\t\tif ( ! [ currentName, nextName ].includes( 'featured' ) ) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn currentName === 'featured' ? -1 : 1;\n\t\t\t\t} ),\n\t\t[ allPatterns, allCategories ]\n\t);\n\n\tconst patternCategory = selectedCategory\n\t\t? selectedCategory\n\t\t: populatedCategories[ 0 ];\n\n\tuseEffect( () => {\n\t\tif (\n\t\t\tallPatterns.some(\n\t\t\t\t( pattern ) => getPatternIndex( pattern ) === Infinity\n\t\t\t) &&\n\t\t\t! populatedCategories.find(\n\t\t\t\t( category ) => category.name === 'uncategorized'\n\t\t\t)\n\t\t) {\n\t\t\tpopulatedCategories.push( {\n\t\t\t\tname: 'uncategorized',\n\t\t\t\tlabel: _x( 'Uncategorized' ),\n\t\t\t} );\n\t\t}\n\t}, [ populatedCategories, allPatterns ] );\n\n\tconst getPatternIndex = useCallback(\n\t\t( pattern ) => {\n\t\t\tif ( ! pattern.categories || ! pattern.categories.length ) {\n\t\t\t\treturn Infinity;\n\t\t\t}\n\t\t\tconst indexedCategories = fromPairs(\n\t\t\t\tpopulatedCategories.map( ( { name }, index ) => [\n\t\t\t\t\tname,\n\t\t\t\t\tindex,\n\t\t\t\t] )\n\t\t\t);\n\t\t\treturn Math.min(\n\t\t\t\t...pattern.categories.map( ( cat ) =>\n\t\t\t\t\tindexedCategories[ cat ] !== undefined\n\t\t\t\t\t\t? indexedCategories[ cat ]\n\t\t\t\t\t\t: Infinity\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\t[ populatedCategories ]\n\t);\n\n\tconst currentCategoryPatterns = useMemo(\n\t\t() =>\n\t\t\tallPatterns.filter( ( pattern ) =>\n\t\t\t\tpatternCategory.name === 'uncategorized'\n\t\t\t\t\t? getPatternIndex( pattern ) === Infinity\n\t\t\t\t\t: pattern.categories &&\n\t\t\t\t\t  pattern.categories.includes( patternCategory.name )\n\t\t\t),\n\t\t[ allPatterns, patternCategory ]\n\t);\n\n\t// Ordering the patterns is important for the async rendering.\n\tconst orderedPatterns = useMemo( () => {\n\t\treturn currentCategoryPatterns.sort( ( a, b ) => {\n\t\t\treturn getPatternIndex( a ) - getPatternIndex( b );\n\t\t} );\n\t}, [ currentCategoryPatterns, getPatternIndex ] );\n\n\tconst currentShownPatterns = useAsyncList( orderedPatterns );\n\n\treturn (\n\t\t<>\n\t\t\t{ !! currentCategoryPatterns.length && (\n\t\t\t\t<PatternInserterPanel\n\t\t\t\t\tselectedCategory={ patternCategory }\n\t\t\t\t\tpatternCategories={ populatedCategories }\n\t\t\t\t\tonClickCategory={ onClickCategory }\n\t\t\t\t>\n\t\t\t\t\t<BlockPatternList\n\t\t\t\t\t\tshownPatterns={ currentShownPatterns }\n\t\t\t\t\t\tblockPatterns={ currentCategoryPatterns }\n\t\t\t\t\t\tonClickPattern={ onClick }\n\t\t\t\t\t\tlabel={ patternCategory.label }\n\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\tisDraggable\n\t\t\t\t\t/>\n\t\t\t\t</PatternInserterPanel>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nfunction BlockPatternsTabs( {\n\trootClientId,\n\tonInsert,\n\tonClickCategory,\n\tselectedCategory,\n} ) {\n\treturn (\n\t\t<BlockPatternsCategory\n\t\t\trootClientId={ rootClientId }\n\t\t\tselectedCategory={ selectedCategory }\n\t\t\tonInsert={ onInsert }\n\t\t\tonClickCategory={ onClickCategory }\n\t\t/>\n\t);\n}\n\nexport default BlockPatternsTabs;\n"]}