{"version":3,"sources":["@wordpress/components/src/number-control/index.js"],"names":["NumberControl","__unstableStateReducer","stateReducer","state","className","dragDirection","hideHTMLArrows","isDragEnabled","isShiftStepEnabled","label","max","Infinity","min","required","shiftStep","step","type","typeProp","value","valueProp","props","ref","isStepAny","baseStep","parseFloat","baseValue","constrainValue","stepOverride","Math","autoComplete","classes","numberControlStateReducer","action","payload","event","currentValue","inputControlActionTypes","PRESS_UP","PRESS_DOWN","enableShift","shiftKey","incrementalValue","nextValue","preventDefault","DRAG","x","y","delta","modifier","directionModifier","ceil","abs","sign","distance","PRESS_ENTER","COMMIT","applyEmptyValue"],"mappings":";;;;;;;;;;;;AASA;;;;AALA;;AAMA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AAnBA;;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;AAOO,SAASA,aAAT,CACN;AACCC,EAAAA,sBAAsB,EAAEC,YAAY,GAAKC,KAAF,IAAaA,KADrD;AAECC,EAAAA,SAFD;AAGCC,EAAAA,aAAa,GAAG,GAHjB;AAICC,EAAAA,cAAc,GAAG,KAJlB;AAKCC,EAAAA,aAAa,GAAG,IALjB;AAMCC,EAAAA,kBAAkB,GAAG,IANtB;AAOCC,EAAAA,KAPD;AAQCC,EAAAA,GAAG,GAAGC,QARP;AASCC,EAAAA,GAAG,GAAG,CAACD,QATR;AAUCE,EAAAA,QAAQ,GAAG,KAVZ;AAWCC,EAAAA,SAAS,GAAG,EAXb;AAYCC,EAAAA,IAAI,GAAG,CAZR;AAaCC,EAAAA,IAAI,EAAEC,QAAQ,GAAG,QAblB;AAcCC,EAAAA,KAAK,EAAEC,SAdR;AAeC,KAAGC;AAfJ,CADM,EAkBNC,GAlBM,EAmBL;AACD,QAAMC,SAAS,GAAGP,IAAI,KAAK,KAA3B;AACA,QAAMQ,QAAQ,GAAGD,SAAS,GAAG,CAAH,GAAOE,UAAU,CAAET,IAAF,CAA3C;AACA,QAAMU,SAAS,GAAG,sBAAY,CAAZ,EAAeb,GAAf,EAAoBF,GAApB,EAAyBa,QAAzB,CAAlB;;AACA,QAAMG,cAAc,GAAG,CAAER,KAAF,EAASS,YAAT,KAA2B;AACjD;AACA,WAAOL,SAAS,GACbM,IAAI,CAAChB,GAAL,CAAUF,GAAV,EAAekB,IAAI,CAAClB,GAAL,CAAUE,GAAV,EAAeM,KAAf,CAAf,CADa,GAEb,sBAAYA,KAAZ,EAAmBN,GAAnB,EAAwBF,GAAxB,EAA6BiB,YAA7B,aAA6BA,YAA7B,cAA6BA,YAA7B,GAA6CJ,QAA7C,CAFH;AAGA,GALD;;AAOA,QAAMM,YAAY,GAAGZ,QAAQ,KAAK,QAAb,GAAwB,KAAxB,GAAgC,IAArD;AACA,QAAMa,OAAO,GAAG,yBAAY,2BAAZ,EAAyC1B,SAAzC,CAAhB;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,QAAM2B,yBAAyB,GAAG,CAAE5B,KAAF,EAAS6B,MAAT,KAAqB;AACtD,UAAM;AAAEhB,MAAAA,IAAF;AAAQiB,MAAAA;AAAR,QAAoBD,MAA1B;AACA,UAAME,KAAK,GAAGD,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEC,KAAvB;AACA,UAAMC,YAAY,GAAGhC,KAAK,CAACe,KAA3B;AAEA;AACF;AACA;;AACE,QACCF,IAAI,KAAKoB,uBAAuB,CAACC,QAAjC,IACArB,IAAI,KAAKoB,uBAAuB,CAACE,UAFlC,EAGE;AACD,YAAMC,WAAW,GAAGL,KAAK,CAACM,QAAN,IAAkBhC,kBAAtC;AAEA,YAAMiC,gBAAgB,GAAGF,WAAW,GACjCf,UAAU,CAAEV,SAAF,CAAV,GAA0BS,QADO,GAEjCA,QAFH;AAGA,UAAImB,SAAS,GAAG,0BAAcP,YAAd,IACbV,SADa,GAEbU,YAFH;;AAIA,UAAKD,KAAL,aAAKA,KAAL,eAAKA,KAAK,CAAES,cAAZ,EAA6B;AAC5BT,QAAAA,KAAK,CAACS,cAAN;AACA;;AAED,UAAK3B,IAAI,KAAKoB,uBAAuB,CAACC,QAAtC,EAAiD;AAChDK,QAAAA,SAAS,GAAG,eAAKA,SAAL,EAAgBD,gBAAhB,CAAZ;AACA;;AAED,UAAKzB,IAAI,KAAKoB,uBAAuB,CAACE,UAAtC,EAAmD;AAClDI,QAAAA,SAAS,GAAG,oBAAUA,SAAV,EAAqBD,gBAArB,CAAZ;AACA;;AAEDtC,MAAAA,KAAK,CAACe,KAAN,GAAcQ,cAAc,CAC3BgB,SAD2B,EAE3BH,WAAW,GAAGE,gBAAH,GAAsB,IAFN,CAA5B;AAIA;AAED;AACF;AACA;;;AACE,QAAKzB,IAAI,KAAKoB,uBAAuB,CAACQ,IAAjC,IAAyCrC,aAA9C,EAA8D;AAC7D,YAAM,CAAEsC,CAAF,EAAKC,CAAL,IAAWb,OAAO,CAACc,KAAzB;AACA,YAAMR,WAAW,GAAGN,OAAO,CAACO,QAAR,IAAoBhC,kBAAxC;AACA,YAAMwC,QAAQ,GAAGT,WAAW,GACzBf,UAAU,CAAEV,SAAF,CAAV,GAA0BS,QADD,GAEzBA,QAFH;AAIA,UAAI0B,iBAAJ;AACA,UAAIF,KAAJ;;AAEA,cAAS1C,aAAT;AACC,aAAK,GAAL;AACC0C,UAAAA,KAAK,GAAGD,CAAR;AACAG,UAAAA,iBAAiB,GAAG,CAAC,CAArB;AACA;;AAED,aAAK,GAAL;AACCF,UAAAA,KAAK,GAAGF,CAAR;AACAI,UAAAA,iBAAiB,GAAG,qBAAU,CAAC,CAAX,GAAe,CAAnC;AACA;;AAED,aAAK,GAAL;AACCF,UAAAA,KAAK,GAAGD,CAAR;AACAG,UAAAA,iBAAiB,GAAG,CAApB;AACA;;AAED,aAAK,GAAL;AACCF,UAAAA,KAAK,GAAGF,CAAR;AACAI,UAAAA,iBAAiB,GAAG,qBAAU,CAAV,GAAc,CAAC,CAAnC;AACA;AAnBF;;AAsBA,UAAKF,KAAK,KAAK,CAAf,EAAmB;AAClBA,QAAAA,KAAK,GAAGnB,IAAI,CAACsB,IAAL,CAAWtB,IAAI,CAACuB,GAAL,CAAUJ,KAAV,CAAX,IAAiCnB,IAAI,CAACwB,IAAL,CAAWL,KAAX,CAAzC;AACA,cAAMM,QAAQ,GAAGN,KAAK,GAAGC,QAAR,GAAmBC,iBAApC;AAEA9C,QAAAA,KAAK,CAACe,KAAN,GAAcQ,cAAc,CAC3B,eAAKS,YAAL,EAAmBkB,QAAnB,CAD2B,EAE3Bd,WAAW,GAAGS,QAAH,GAAc,IAFE,CAA5B;AAIA;AACD;AAED;AACF;AACA;;;AACE,QACChC,IAAI,KAAKoB,uBAAuB,CAACkB,WAAjC,IACAtC,IAAI,KAAKoB,uBAAuB,CAACmB,MAFlC,EAGE;AACD,YAAMC,eAAe,GAAG3C,QAAQ,KAAK,KAAb,IAAsBsB,YAAY,KAAK,EAA/D;AAEAhC,MAAAA,KAAK,CAACe,KAAN,GAAcsC,eAAe,GAC1BrB,YAD0B,GAE1BT,cAAc,CAAES,YAAF,CAFjB;AAGA;;AAED,WAAOhC,KAAP;AACA,GApGD;;AAsGA,SACC,4BAAC,0BAAD;AACC,IAAA,YAAY,EAAG0B,YADhB;AAEC,IAAA,SAAS,EAAC;AAFX,KAGMT,KAHN;AAIC,IAAA,SAAS,EAAGU,OAJb;AAKC,IAAA,aAAa,EAAGzB,aALjB;AAMC,IAAA,cAAc,EAAGC,cANlB;AAOC,IAAA,aAAa,EAAGC,aAPjB;AAQC,IAAA,KAAK,EAAGE,KART;AASC,IAAA,GAAG,EAAGC,GATP;AAUC,IAAA,GAAG,EAAGE,GAVP;AAWC,IAAA,GAAG,EAAGS,GAXP;AAYC,IAAA,QAAQ,EAAGR,QAZZ;AAaC,IAAA,IAAI,EAAGE,IAbR;AAcC,IAAA,IAAI,EAAGE,QAdR;AAeC,IAAA,KAAK,EAAGE,SAfT;AAgBC,IAAA,sBAAsB,EAAG,mCACxBY,yBADwB,EAExB7B,YAFwB;AAhB1B,KADD;AAuBA;;eAEc,yBAAYF,aAAZ,C","sourcesContent":["// @ts-nocheck\n/**\n * External dependencies\n */\nimport classNames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\nimport { isRTL } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { Input } from './styles/number-control-styles';\nimport * as inputControlActionTypes from '../input-control/reducer/actions';\nimport { composeStateReducers } from '../input-control/reducer/reducer';\nimport { add, subtract, roundClamp } from '../utils/math';\nimport { isValueEmpty } from '../utils/values';\n\nexport function NumberControl(\n\t{\n\t\t__unstableStateReducer: stateReducer = ( state ) => state,\n\t\tclassName,\n\t\tdragDirection = 'n',\n\t\thideHTMLArrows = false,\n\t\tisDragEnabled = true,\n\t\tisShiftStepEnabled = true,\n\t\tlabel,\n\t\tmax = Infinity,\n\t\tmin = -Infinity,\n\t\trequired = false,\n\t\tshiftStep = 10,\n\t\tstep = 1,\n\t\ttype: typeProp = 'number',\n\t\tvalue: valueProp,\n\t\t...props\n\t},\n\tref\n) {\n\tconst isStepAny = step === 'any';\n\tconst baseStep = isStepAny ? 1 : parseFloat( step );\n\tconst baseValue = roundClamp( 0, min, max, baseStep );\n\tconst constrainValue = ( value, stepOverride ) => {\n\t\t// When step is \"any\" clamp the value, otherwise round and clamp it\n\t\treturn isStepAny\n\t\t\t? Math.min( max, Math.max( min, value ) )\n\t\t\t: roundClamp( value, min, max, stepOverride ?? baseStep );\n\t};\n\n\tconst autoComplete = typeProp === 'number' ? 'off' : null;\n\tconst classes = classNames( 'components-number-control', className );\n\n\t/**\n\t * \"Middleware\" function that intercepts updates from InputControl.\n\t * This allows us to tap into actions to transform the (next) state for\n\t * InputControl.\n\t *\n\t * @param {Object} state  State from InputControl\n\t * @param {Object} action Action triggering state change\n\t * @return {Object} The updated state to apply to InputControl\n\t */\n\tconst numberControlStateReducer = ( state, action ) => {\n\t\tconst { type, payload } = action;\n\t\tconst event = payload?.event;\n\t\tconst currentValue = state.value;\n\n\t\t/**\n\t\t * Handles custom UP and DOWN Keyboard events\n\t\t */\n\t\tif (\n\t\t\ttype === inputControlActionTypes.PRESS_UP ||\n\t\t\ttype === inputControlActionTypes.PRESS_DOWN\n\t\t) {\n\t\t\tconst enableShift = event.shiftKey && isShiftStepEnabled;\n\n\t\t\tconst incrementalValue = enableShift\n\t\t\t\t? parseFloat( shiftStep ) * baseStep\n\t\t\t\t: baseStep;\n\t\t\tlet nextValue = isValueEmpty( currentValue )\n\t\t\t\t? baseValue\n\t\t\t\t: currentValue;\n\n\t\t\tif ( event?.preventDefault ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif ( type === inputControlActionTypes.PRESS_UP ) {\n\t\t\t\tnextValue = add( nextValue, incrementalValue );\n\t\t\t}\n\n\t\t\tif ( type === inputControlActionTypes.PRESS_DOWN ) {\n\t\t\t\tnextValue = subtract( nextValue, incrementalValue );\n\t\t\t}\n\n\t\t\tstate.value = constrainValue(\n\t\t\t\tnextValue,\n\t\t\t\tenableShift ? incrementalValue : null\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Handles drag to update events\n\t\t */\n\t\tif ( type === inputControlActionTypes.DRAG && isDragEnabled ) {\n\t\t\tconst [ x, y ] = payload.delta;\n\t\t\tconst enableShift = payload.shiftKey && isShiftStepEnabled;\n\t\t\tconst modifier = enableShift\n\t\t\t\t? parseFloat( shiftStep ) * baseStep\n\t\t\t\t: baseStep;\n\n\t\t\tlet directionModifier;\n\t\t\tlet delta;\n\n\t\t\tswitch ( dragDirection ) {\n\t\t\t\tcase 'n':\n\t\t\t\t\tdelta = y;\n\t\t\t\t\tdirectionModifier = -1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'e':\n\t\t\t\t\tdelta = x;\n\t\t\t\t\tdirectionModifier = isRTL() ? -1 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 's':\n\t\t\t\t\tdelta = y;\n\t\t\t\t\tdirectionModifier = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'w':\n\t\t\t\t\tdelta = x;\n\t\t\t\t\tdirectionModifier = isRTL() ? 1 : -1;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ( delta !== 0 ) {\n\t\t\t\tdelta = Math.ceil( Math.abs( delta ) ) * Math.sign( delta );\n\t\t\t\tconst distance = delta * modifier * directionModifier;\n\n\t\t\t\tstate.value = constrainValue(\n\t\t\t\t\tadd( currentValue, distance ),\n\t\t\t\t\tenableShift ? modifier : null\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handles commit (ENTER key press or on blur if isPressEnterToChange)\n\t\t */\n\t\tif (\n\t\t\ttype === inputControlActionTypes.PRESS_ENTER ||\n\t\t\ttype === inputControlActionTypes.COMMIT\n\t\t) {\n\t\t\tconst applyEmptyValue = required === false && currentValue === '';\n\n\t\t\tstate.value = applyEmptyValue\n\t\t\t\t? currentValue\n\t\t\t\t: constrainValue( currentValue );\n\t\t}\n\n\t\treturn state;\n\t};\n\n\treturn (\n\t\t<Input\n\t\t\tautoComplete={ autoComplete }\n\t\t\tinputMode=\"numeric\"\n\t\t\t{ ...props }\n\t\t\tclassName={ classes }\n\t\t\tdragDirection={ dragDirection }\n\t\t\thideHTMLArrows={ hideHTMLArrows }\n\t\t\tisDragEnabled={ isDragEnabled }\n\t\t\tlabel={ label }\n\t\t\tmax={ max }\n\t\t\tmin={ min }\n\t\t\tref={ ref }\n\t\t\trequired={ required }\n\t\t\tstep={ step }\n\t\t\ttype={ typeProp }\n\t\t\tvalue={ valueProp }\n\t\t\t__unstableStateReducer={ composeStateReducers(\n\t\t\t\tnumberControlStateReducer,\n\t\t\t\tstateReducer\n\t\t\t) }\n\t\t/>\n\t);\n}\n\nexport default forwardRef( NumberControl );\n"]}