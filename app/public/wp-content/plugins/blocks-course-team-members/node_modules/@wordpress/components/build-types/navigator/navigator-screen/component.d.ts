/// <reference types="react" />
import { MotionProps } from 'framer-motion';
/**
 * Internal dependencies
 */
import { WordPressComponentProps } from '../../ui/context';
import type { NavigatorScreenProps } from '../types';
declare type Props = Omit<WordPressComponentProps<NavigatorScreenProps, 'div', false>, keyof MotionProps>;
/**
 * The `NavigatorScreen` component represents a single view/screen/panel/menu and is supposed to be used in combination with the `NavigatorProvider` component.
 *
 * @example
 * ```jsx
 * import {
 *   __experimentalNavigatorProvider as NavigatorProvider,
 *   __experimentalNavigatorScreen as NavigatorScreen,
 *   __experimentalUseNavigator as useNavigator,
 * } from '@wordpress/components';
 *
 * function NavigatorButton( { path, ...props } ) {
 *  const { goTo } = useNavigator();
 *  return (
 *    <Button
 *      variant="primary"
 *      onClick={ () => goTo( path ) }
 *      { ...props }
 *    />
 *  );
 * }
 *
 * function NavigatorBackButton( props ) {
 *   const { goBack } = useNavigator();
 *   return <Button variant="secondary" onClick={ () => goBack() } { ...props } />;
 * }
 *
 * const MyNavigation = () => (
 *   <NavigatorProvider initialPath="/">
 *     <NavigatorScreen path="/">
 *       <p>This is the home screen.</p>
 *   	   <NavigatorButton path="/child">
 *          Navigate to child screen.
 *       </NavigatorButton>
 *     </NavigatorScreen>
 *
 *     <NavigatorScreen path="/child">
 *       <p>This is the child screen.</p>
 *       <NavigatorBackButton>Go back</NavigatorBackButton>
 *     </NavigatorScreen>
 *   </NavigatorProvider>
 * );
 * ```
 */
declare const ConnectedNavigatorScreen: import("../../ui/context").WordPressComponent<import("react").ElementType<any>, Props, boolean>;
export default ConnectedNavigatorScreen;
//# sourceMappingURL=component.d.ts.map