{"version":3,"sources":["@wordpress/components/src/mobile/color-settings/palette.screen.native.js"],"names":["View","Text","TouchableWithoutFeedback","__","useState","useContext","usePreferredColorSchemeStyle","ColorControl","PanelBody","BottomSheetContext","useRoute","useNavigation","ColorPalette","ColorIndicator","NavBar","SegmentedControls","colorsUtils","styles","HIT_SLOP","top","bottom","left","right","PaletteScreen","route","navigation","shouldEnableBottomSheetScroll","label","onColorChange","onGradientChange","onColorCleared","colorValue","defaultSettings","hideNavigation","params","segments","isGradient","currentValue","setCurrentValue","isGradientColor","selectedSegmentIndex","currentSegment","setCurrentSegment","horizontalSeparatorStyle","horizontalSeparator","horizontalSeparatorDark","clearButtonStyle","clearButton","clearButtonDark","selectedColorTextStyle","colorText","colorTextDark","isSolidSegment","isCustomGadientShown","setColor","color","onClear","undefined","onCustomPress","navigate","screens","picker","gradientPicker","getClearButton","clearButtonContainer","getFooter","indexOf","colorIndicator","footer","flex","toUpperCase","selectColorText","goBack"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, Text, TouchableWithoutFeedback } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState, useContext } from '@wordpress/element';\nimport { usePreferredColorSchemeStyle } from '@wordpress/compose';\nimport {\n\tColorControl,\n\tPanelBody,\n\tBottomSheetContext,\n} from '@wordpress/components';\nimport { useRoute, useNavigation } from '@react-navigation/native';\n/**\n * Internal dependencies\n */\nimport ColorPalette from '../../color-palette';\nimport ColorIndicator from '../../color-indicator';\nimport NavBar from '../bottom-sheet/nav-bar';\nimport SegmentedControls from '../segmented-control';\nimport { colorsUtils } from './utils';\n\nimport styles from './style.scss';\n\nconst HIT_SLOP = { top: 8, bottom: 8, left: 8, right: 8 };\n\nconst PaletteScreen = () => {\n\tconst route = useRoute();\n\tconst navigation = useNavigation();\n\tconst { shouldEnableBottomSheetScroll } = useContext( BottomSheetContext );\n\tconst {\n\t\tlabel,\n\t\tonColorChange,\n\t\tonGradientChange,\n\t\tonColorCleared,\n\t\tcolorValue,\n\t\tdefaultSettings,\n\t\thideNavigation = false,\n\t} = route.params || {};\n\tconst { segments, isGradient } = colorsUtils;\n\tconst [ currentValue, setCurrentValue ] = useState( colorValue );\n\tconst isGradientColor = isGradient( currentValue );\n\tconst selectedSegmentIndex = isGradientColor ? 1 : 0;\n\n\tconst [ currentSegment, setCurrentSegment ] = useState(\n\t\tsegments[ selectedSegmentIndex ]\n\t);\n\n\tconst horizontalSeparatorStyle = usePreferredColorSchemeStyle(\n\t\tstyles.horizontalSeparator,\n\t\tstyles.horizontalSeparatorDark\n\t);\n\tconst clearButtonStyle = usePreferredColorSchemeStyle(\n\t\tstyles.clearButton,\n\t\tstyles.clearButtonDark\n\t);\n\tconst selectedColorTextStyle = usePreferredColorSchemeStyle(\n\t\tstyles.colorText,\n\t\tstyles.colorTextDark\n\t);\n\n\tconst isSolidSegment = currentSegment === segments[ 0 ];\n\tconst isCustomGadientShown = ! isSolidSegment && isGradientColor;\n\n\tconst setColor = ( color ) => {\n\t\tsetCurrentValue( color );\n\t\tif ( isSolidSegment && onColorChange && onGradientChange ) {\n\t\t\tonColorChange( color );\n\t\t\tonGradientChange( '' );\n\t\t} else if ( isSolidSegment && onColorChange ) {\n\t\t\tonColorChange( color );\n\t\t} else if ( ! isSolidSegment && onGradientChange ) {\n\t\t\tonGradientChange( color );\n\t\t\tonColorChange( '' );\n\t\t}\n\t};\n\n\tfunction onClear() {\n\t\tsetCurrentValue( undefined );\n\t\tif ( isSolidSegment ) {\n\t\t\tonColorChange( '' );\n\t\t} else {\n\t\t\tonGradientChange( '' );\n\t\t}\n\n\t\tif ( onColorCleared ) {\n\t\t\tonColorCleared();\n\t\t}\n\t}\n\n\tfunction onCustomPress() {\n\t\tif ( isSolidSegment ) {\n\t\t\tnavigation.navigate( colorsUtils.screens.picker, {\n\t\t\t\tcurrentValue,\n\t\t\t\tsetColor,\n\t\t\t} );\n\t\t} else {\n\t\t\tnavigation.navigate( colorsUtils.screens.gradientPicker, {\n\t\t\t\tsetColor,\n\t\t\t\tisGradientColor,\n\t\t\t\tcurrentValue,\n\t\t\t} );\n\t\t}\n\t}\n\n\tfunction getClearButton() {\n\t\treturn (\n\t\t\t<TouchableWithoutFeedback onPress={ onClear } hitSlop={ HIT_SLOP }>\n\t\t\t\t<View style={ styles.clearButtonContainer }>\n\t\t\t\t\t<Text style={ clearButtonStyle }>{ __( 'Reset' ) }</Text>\n\t\t\t\t</View>\n\t\t\t</TouchableWithoutFeedback>\n\t\t);\n\t}\n\n\tfunction getFooter() {\n\t\tif ( onGradientChange ) {\n\t\t\treturn (\n\t\t\t\t<SegmentedControls\n\t\t\t\t\tsegments={ segments }\n\t\t\t\t\tsegmentHandler={ setCurrentSegment }\n\t\t\t\t\tselectedIndex={ segments.indexOf( currentSegment ) }\n\t\t\t\t\taddonLeft={\n\t\t\t\t\t\tcurrentValue && (\n\t\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\taddonRight={ currentValue && getClearButton() }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<View style={ styles.footer }>\n\t\t\t\t<View style={ styles.flex }>\n\t\t\t\t\t{ currentValue && (\n\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</View>\n\t\t\t\t{ currentValue ? (\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={ selectedColorTextStyle }\n\t\t\t\t\t\tmaxFontSizeMultiplier={ 2 }\n\t\t\t\t\t\tselectable\n\t\t\t\t\t>\n\t\t\t\t\t\t{ currentValue.toUpperCase() }\n\t\t\t\t\t</Text>\n\t\t\t\t) : (\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={ styles.selectColorText }\n\t\t\t\t\t\tmaxFontSizeMultiplier={ 2 }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Select a color above' ) }\n\t\t\t\t\t</Text>\n\t\t\t\t) }\n\t\t\t\t<View style={ styles.flex }>\n\t\t\t\t\t{ currentValue && getClearButton() }\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n\treturn (\n\t\t<View>\n\t\t\t{ ! hideNavigation && (\n\t\t\t\t<NavBar>\n\t\t\t\t\t<NavBar.BackButton onPress={ navigation.goBack } />\n\t\t\t\t\t<NavBar.Heading>{ label } </NavBar.Heading>\n\t\t\t\t</NavBar>\n\t\t\t) }\n\t\t\t<ColorPalette\n\t\t\t\tsetColor={ setColor }\n\t\t\t\tactiveColor={ currentValue }\n\t\t\t\tisGradientColor={ isGradientColor }\n\t\t\t\tcurrentSegment={ currentSegment }\n\t\t\t\tonCustomPress={ onCustomPress }\n\t\t\t\tshouldEnableBottomSheetScroll={ shouldEnableBottomSheetScroll }\n\t\t\t\tdefaultSettings={ defaultSettings }\n\t\t\t/>\n\t\t\t{ isCustomGadientShown && (\n\t\t\t\t<>\n\t\t\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t\t\t<PanelBody>\n\t\t\t\t\t\t<ColorControl\n\t\t\t\t\t\t\tlabel={ __( 'Customize Gradient' ) }\n\t\t\t\t\t\t\tonPress={ onCustomPress }\n\t\t\t\t\t\t\twithColorIndicator={ false }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t{ getFooter() }\n\t\t</View>\n\t);\n};\n\nexport default PaletteScreen;\n"]}