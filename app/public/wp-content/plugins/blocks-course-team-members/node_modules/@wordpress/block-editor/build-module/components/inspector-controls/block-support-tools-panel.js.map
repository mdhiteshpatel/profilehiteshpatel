{"version":3,"sources":["@wordpress/block-editor/src/components/inspector-controls/block-support-tools-panel.js"],"names":["__experimentalToolsPanel","ToolsPanel","useDispatch","useSelect","store","blockEditorStore","cleanEmptyObject","BlockSupportToolsPanel","children","group","label","clientId","attributes","select","getBlockAttributes","getSelectedBlockClientId","selectedBlockClientId","updateBlockAttributes","resetAll","resetFilters","style","newAttributes","forEach","resetFilter"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,wBAAwB,IAAIC,UAArC,QAAuD,uBAAvD;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,iBAAvC;AAEA;AACA;AACA;;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,eAAe,SAASC,sBAAT,OAA8D;AAAA,MAA7B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAA6B;AAC5E,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BT,SAAS,CAAIU,MAAF,IAAc;AACzD,UAAM;AAAEC,MAAAA,kBAAF;AAAsBC,MAAAA;AAAtB,QAAmDF,MAAM,CAC9DR,gBAD8D,CAA/D;AAGA,UAAMW,qBAAqB,GAAGD,wBAAwB,EAAtD;AAEA,WAAO;AACNJ,MAAAA,QAAQ,EAAEK,qBADJ;AAENJ,MAAAA,UAAU,EAAEE,kBAAkB,CAAEE,qBAAF;AAFxB,KAAP;AAIA,GAVyC,EAUvC,EAVuC,CAA1C;AAWA,QAAM;AAAEC,IAAAA;AAAF,MAA4Bf,WAAW,CAAEG,gBAAF,CAA7C;;AAEA,QAAMa,QAAQ,GAAG,YAAyB;AAAA,QAAvBC,YAAuB,uEAAR,EAAQ;AACzC,UAAM;AAAEC,MAAAA;AAAF,QAAYR,UAAlB;AACA,QAAIS,aAAa,GAAG;AAAED,MAAAA;AAAF,KAApB;AAEAD,IAAAA,YAAY,CAACG,OAAb,CAAwBC,WAAF,IAAmB;AACxCF,MAAAA,aAAa,GAAG,EACf,GAAGA,aADY;AAEf,WAAGE,WAAW,CAAEF,aAAF;AAFC,OAAhB;AAIA,KALD,EAJyC,CAWzC;;AACAA,IAAAA,aAAa,GAAG,EACf,GAAGA,aADY;AAEfD,MAAAA,KAAK,EAAEd,gBAAgB,CAAEe,aAAa,CAACD,KAAhB;AAFR,KAAhB;AAKAH,IAAAA,qBAAqB,CAAEN,QAAF,EAAYU,aAAZ,CAArB;AACA,GAlBD;;AAoBA,SACC,cAAC,UAAD;AACC,IAAA,SAAS,EAAI,GAAGZ,KAAO,sBADxB;AAEC,IAAA,KAAK,EAAGC,KAFT;AAGC,IAAA,QAAQ,EAAGQ,QAHZ;AAIC,IAAA,GAAG,EAAGP,QAJP;AAKC,IAAA,OAAO,EAAGA,QALX;AAMC,IAAA,eAAe,EAAG,IANnB;AAOC,IAAA,4BAA4B,EAAG,IAPhC,CAOuC;;AAPvC,KASGH,QATH,CADD;AAaA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __experimentalToolsPanel as ToolsPanel } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\nimport { cleanEmptyObject } from '../../hooks/utils';\n\nexport default function BlockSupportToolsPanel( { children, group, label } ) {\n\tconst { clientId, attributes } = useSelect( ( select ) => {\n\t\tconst { getBlockAttributes, getSelectedBlockClientId } = select(\n\t\t\tblockEditorStore\n\t\t);\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\n\t\treturn {\n\t\t\tclientId: selectedBlockClientId,\n\t\t\tattributes: getBlockAttributes( selectedBlockClientId ),\n\t\t};\n\t}, [] );\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\tconst resetAll = ( resetFilters = [] ) => {\n\t\tconst { style } = attributes;\n\t\tlet newAttributes = { style };\n\n\t\tresetFilters.forEach( ( resetFilter ) => {\n\t\t\tnewAttributes = {\n\t\t\t\t...newAttributes,\n\t\t\t\t...resetFilter( newAttributes ),\n\t\t\t};\n\t\t} );\n\n\t\t// Enforce a cleaned style object.\n\t\tnewAttributes = {\n\t\t\t...newAttributes,\n\t\t\tstyle: cleanEmptyObject( newAttributes.style ),\n\t\t};\n\n\t\tupdateBlockAttributes( clientId, newAttributes );\n\t};\n\n\treturn (\n\t\t<ToolsPanel\n\t\t\tclassName={ `${ group }-block-support-panel` }\n\t\t\tlabel={ label }\n\t\t\tresetAll={ resetAll }\n\t\t\tkey={ clientId }\n\t\t\tpanelId={ clientId }\n\t\t\thasInnerWrapper={ true }\n\t\t\tshouldRenderPlaceholderItems={ true } // Required to maintain fills ordering.\n\t\t>\n\t\t\t{ children }\n\t\t</ToolsPanel>\n\t);\n}\n"]}